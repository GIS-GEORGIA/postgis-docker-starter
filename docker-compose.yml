services:
  db:
    build: .
    image: postgis-dev:latest
    container_name: postgis_db
    restart: unless-stopped
    env_file: .env
    ports:
      - "${PG_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
      - ./seed:/seed:ro

  # Seeder runs every 60s: waits for DB, seeds, sleeps, repeats.
  seeder:
    image: postgis-dev:latest
    depends_on:
      - db
    environment:
      POSTGRES_HOST: db
      SEED_MODE: replace   # 'replace' -> TRUNCATE training.places before load (idempotent)
    volumes:
      - ./seed:/seed:ro
    command: >
      bash -lc "
        echo '[seeder] Waiting for database...';
        for i in {1..60}; do
          pg_isready -h ${POSTGRES_HOST:-db} -p 5432 -U ${POSTGRES_USER:-postgres} && break;
          sleep 2;
        done;
        echo '[seeder] Starting 60s loop';
        while true; do
          echo '[seeder] Import cycle'; date;
          /usr/local/bin/setup-geojson.py || echo '[seeder] seed script returned non-zero';
          sleep 60;
        done
      "
    restart: unless-stopped

  adminer:
    image: adminer:latest
    container_name: adminer_ui
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  pgdata:
